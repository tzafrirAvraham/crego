{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\",\"filename\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.5:test":{"value":{"code":"// const allure = require(\"allure-commandline\");\n// import fs from \"fs\";\nconst {\n  startStep,\n  endStep,\n  addStep\n} = require('@wdio/allure-reporter').default;\nimport HomePageFlow from \"./flow/homePageFlow.js\";\nimport RequestProcessFlow from \"./flow/requestProcessFlow.js\";\n// import Alert from \"./test/utils/alert\";\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: ['./test/specs/**/niceToMeet.e2e.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    browserName: 'chrome'\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'https://www.crediteam.co.il/',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  beforeTest: async function (test, context) {\n    startStep('open the site');\n    await browser.maximizeWindow();\n    await browser.url(\"/\");\n    endStep();\n    // startStep('close alert')\n    // await Alert.acceptAlert();\n    // endStep();\n    startStep('go to user details page');\n    await HomePageFlow.goToRequestProcessPage();\n    await RequestProcessFlow.goToNiceToMeetPage();\n    endStep();\n    //   await browser.url(\"/news\");\n    //   await ynetPage.closePopup();\n    //   await browser.pause(7000);\n  }\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n  * Hook that gets executed before a WebdriverIO assertion happens.\n  * @param {object} params information about the assertion to be executed\n  */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n  * Hook that gets executed after a WebdriverIO assertion happened.\n  * @param {object} params information about the assertion that was executed, including its results\n  */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["startStep","endStep","addStep","require","default","HomePageFlow","RequestProcessFlow","exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout","beforeTest","test","context","browser","maximizeWindow","url","goToRequestProcessPage","goToNiceToMeetPage"],"sourceRoot":"C:\\Users\\tzafr\\Desktop\\crego-project\\test\\utils\\cregoNew\\","sources":["wdio.conf.js"],"sourcesContent":["// const allure = require(\"allure-commandline\");\n// import fs from \"fs\";\nconst {startStep, endStep, addStep} = require('@wdio/allure-reporter').default;\nimport HomePageFlow from \"./flow/homePageFlow.js\";\nimport RequestProcessFlow from \"./flow/requestProcessFlow.js\";\n// import Alert from \"./test/utils/alert\";\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // The path of the spec files will be resolved relative from the directory of\n    // of the config file unless it's absolute.\n    //\n    specs: [\n        './test/specs/**/niceToMeet.e2e.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        browserName: 'chrome'\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'https://www.crediteam.co.il/',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    \n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialize specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    beforeTest: async function (test, context) {\n        startStep('open the site')\n        await browser.maximizeWindow();\n        await browser.url(\"/\");\n        endStep();\n        // startStep('close alert')\n        // await Alert.acceptAlert();\n        // endStep();\n        startStep('go to user details page')\n        await HomePageFlow.goToRequestProcessPage();\n        await RequestProcessFlow.goToNiceToMeetPage()\n        endStep();\n      //   await browser.url(\"/news\");\n      //   await ynetPage.closePopup();\n      //   await browser.pause(7000);\n    \n      },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context, hookName) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n    /**\n    * Hook that gets executed before a WebdriverIO assertion happens.\n    * @param {object} params information about the assertion to be executed\n    */\n    // beforeAssertion: function(params) {\n    // }\n    /**\n    * Hook that gets executed after a WebdriverIO assertion happened.\n    * @param {object} params information about the assertion that was executed, including its results\n    */\n    // afterAssertion: function(params) {\n    // }\n}\n"],"mappings":"AAAA;AACA;AACA,MAAM;EAACA,SAAS;EAAEC,OAAO;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC,CAACC,OAAO;AAC9E,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,kBAAkB,MAAM,8BAA8B;AAC7D;AACAC,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,mCAAmC,CACtC;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACXC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,8BAA8B;EACvC;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAEnB;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb,CAAC;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACIC,UAAU,EAAE,eAAAA,CAAgBC,IAAI,EAAEC,OAAO,EAAE;IACvC5B,SAAS,CAAC,eAAe,CAAC;IAC1B,MAAM6B,OAAO,CAACC,cAAc,CAAC,CAAC;IAC9B,MAAMD,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC;IACtB9B,OAAO,CAAC,CAAC;IACT;IACA;IACA;IACAD,SAAS,CAAC,yBAAyB,CAAC;IACpC,MAAMK,YAAY,CAAC2B,sBAAsB,CAAC,CAAC;IAC3C,MAAM1B,kBAAkB,CAAC2B,kBAAkB,CAAC,CAAC;IAC7ChC,OAAO,CAAC,CAAC;IACX;IACA;IACA;EAEA;EACF;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1710338200898},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\",\"filename\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\\\\test\\\\specs\\\\niceToMeet.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\tzafr\\\\Desktop\\\\crego-project\\\\test\\\\utils\\\\cregoNew\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.5:test":{"value":{"code":"// import NiceToMeetFlow from \"../flow/niceToMeetFlow.js\";\nimport NiceToMeetPage from \"../pageobjects/niceToMeet.page.js\";\nimport faker from \"../utils/faker\";\ndescribe('basic details tests', async () => {\n  it('test01_businessOwnerLogin', async () => {\n    await NiceToMeetFlow.basicDetails(1, faker.fakerFirstName(), faker.fakerLastName(), \"0526080164\", faker.fakerEmailAddress());\n    await browser.pause(500);\n    await expect(browser).toHaveUrlContaining(\"otp\");\n  });\n  it('test02_authorizedSignatureLogin', async () => {\n    await NiceToMeetFlow.basicDetails(3, faker.fakerFirstName(), faker.fakerLastName(), \"0526080164\", faker.fakerEmailAddress());\n    await browser.pause(500);\n    await expect(browser).toHaveUrlContaining(\"otp\");\n  });\n  it('test03_externalCounselorLogin', async () => {\n    await NiceToMeetPage.selectRequestSender(2);\n    await NiceToMeetPage.clickCloseCounselorPopup();\n    await NiceToMeetPage.selectRequestSender(2);\n    await NiceToMeetPage.clickAcceptCounselorPopup();\n    await expect(browser).toHaveUrlContaining(\"Advisors\");\n  });\n  it.only('test04_firstNameField', async () => {\n    await NiceToMeetFlow.basicDetails(1, \"1\", faker.fakerLastName(), \"0526080164\", faker.fakerEmailAddress());\n    let expectErrorMessage = \"שדה לא תקין - אנא הקלד 2 תווים לפחות\";\n    let actualErrorMessage = await NiceToMeetPage.getErrorMessageFirstNameField();\n    await expect(expectErrorMessage).toEqual(actualErrorMessage);\n    await NiceToMeetPage.setFirstName(\"123456\");\n    expectErrorMessage = \"שדה לא תקין - אנא הקלד אותיות בלבד\";\n    actualErrorMessage = await NiceToMeetPage.getErrorMessageFirstNameField();\n    await expect(expectErrorMessage).toEqual(actualErrorMessage);\n    await NiceToMeetPage.setFirstName(\"*/!!\");\n    actualErrorMessage = await NiceToMeetPage.getErrorMessageFirstNameField();\n    expect(expectErrorMessage).toEqual(actualErrorMessage);\n    await NiceToMeetPage.setFirstName(\"   \");\n    actualErrorMessage = await NiceToMeetPage.getErrorMessageFirstNameField();\n    expect(expectErrorMessage).toEqual(actualErrorMessage);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOaWNlVG9NZWV0UGFnZSIsImZha2VyIiwiZGVzY3JpYmUiLCJpdCIsIk5pY2VUb01lZXRGbG93IiwiYmFzaWNEZXRhaWxzIiwiZmFrZXJGaXJzdE5hbWUiLCJmYWtlckxhc3ROYW1lIiwiZmFrZXJFbWFpbEFkZHJlc3MiLCJicm93c2VyIiwicGF1c2UiLCJleHBlY3QiLCJ0b0hhdmVVcmxDb250YWluaW5nIiwic2VsZWN0UmVxdWVzdFNlbmRlciIsImNsaWNrQ2xvc2VDb3Vuc2Vsb3JQb3B1cCIsImNsaWNrQWNjZXB0Q291bnNlbG9yUG9wdXAiLCJvbmx5IiwiZXhwZWN0RXJyb3JNZXNzYWdlIiwiYWN0dWFsRXJyb3JNZXNzYWdlIiwiZ2V0RXJyb3JNZXNzYWdlRmlyc3ROYW1lRmllbGQiLCJ0b0VxdWFsIiwic2V0Rmlyc3ROYW1lIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHR6YWZyXFxEZXNrdG9wXFxjcmVnby1wcm9qZWN0XFx0ZXN0XFx1dGlsc1xcY3JlZ29OZXdcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbIm5pY2VUb01lZXQuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLy8gaW1wb3J0IE5pY2VUb01lZXRGbG93IGZyb20gXCIuLi9mbG93L25pY2VUb01lZXRGbG93LmpzXCI7XG5pbXBvcnQgTmljZVRvTWVldFBhZ2UgZnJvbSBcIi4uL3BhZ2VvYmplY3RzL25pY2VUb01lZXQucGFnZS5qc1wiO1xuaW1wb3J0IGZha2VyIGZyb20gXCIuLi91dGlscy9mYWtlclwiO1xuXG5cbmRlc2NyaWJlKCdiYXNpYyBkZXRhaWxzIHRlc3RzJywgYXN5bmMgKCk9PntcblxuXG4gICAgaXQoJ3Rlc3QwMV9idXNpbmVzc093bmVyTG9naW4nLCBhc3luYyAoKT0+e1xuXG4gICAgICAgIGF3YWl0IE5pY2VUb01lZXRGbG93LmJhc2ljRGV0YWlscygxLCBmYWtlci5mYWtlckZpcnN0TmFtZSgpLCBmYWtlci5mYWtlckxhc3ROYW1lKCksIFwiMDUyNjA4MDE2NFwiLGZha2VyLmZha2VyRW1haWxBZGRyZXNzKCkpO1xuXG4gICAgICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwKTtcbiAgICAgICAgYXdhaXQgZXhwZWN0KGJyb3dzZXIpLnRvSGF2ZVVybENvbnRhaW5pbmcoXCJvdHBcIik7XG5cbiAgICB9KVxuXG4gICAgaXQoJ3Rlc3QwMl9hdXRob3JpemVkU2lnbmF0dXJlTG9naW4nLCBhc3luYyAoKT0+e1xuXG4gICAgICAgYXdhaXQgTmljZVRvTWVldEZsb3cuYmFzaWNEZXRhaWxzKDMsIGZha2VyLmZha2VyRmlyc3ROYW1lKCksIGZha2VyLmZha2VyTGFzdE5hbWUoKSwgXCIwNTI2MDgwMTY0XCIsZmFrZXIuZmFrZXJFbWFpbEFkZHJlc3MoKSlcblxuICAgICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwKTsgXG4gICAgICAgYXdhaXQgZXhwZWN0KGJyb3dzZXIpLnRvSGF2ZVVybENvbnRhaW5pbmcoXCJvdHBcIik7XG5cbiAgICB9KVxuXG4gICAgaXQoJ3Rlc3QwM19leHRlcm5hbENvdW5zZWxvckxvZ2luJywgYXN5bmMgKCk9PntcblxuXG4gICAgICAgIGF3YWl0IE5pY2VUb01lZXRQYWdlLnNlbGVjdFJlcXVlc3RTZW5kZXIoMik7XG4gICAgICAgIGF3YWl0IE5pY2VUb01lZXRQYWdlLmNsaWNrQ2xvc2VDb3Vuc2Vsb3JQb3B1cCgpO1xuICAgICAgICBhd2FpdCBOaWNlVG9NZWV0UGFnZS5zZWxlY3RSZXF1ZXN0U2VuZGVyKDIpO1xuICAgICAgICBhd2FpdCBOaWNlVG9NZWV0UGFnZS5jbGlja0FjY2VwdENvdW5zZWxvclBvcHVwKCk7XG5cbiAgICAgICAgYXdhaXQgZXhwZWN0KGJyb3dzZXIpLnRvSGF2ZVVybENvbnRhaW5pbmcoXCJBZHZpc29yc1wiKTtcblxuICAgIH0pXG4gICAgXG4gICAgaXQub25seSgndGVzdDA0X2ZpcnN0TmFtZUZpZWxkJywgYXN5bmMgKCk9PntcbiAgICAgICAgYXdhaXQgTmljZVRvTWVldEZsb3cuYmFzaWNEZXRhaWxzKDEsXCIxXCIsZmFrZXIuZmFrZXJMYXN0TmFtZSgpLFwiMDUyNjA4MDE2NFwiLGZha2VyLmZha2VyRW1haWxBZGRyZXNzKCkpO1xuXG4gICAgICAgIGxldCBleHBlY3RFcnJvck1lc3NhZ2U9IFwi16nXk9eUINec15Ag16rXp9eZ158gLSDXkNeg15Ag15TXp9ec15MgMiDXqteV15XXmdedINec16TXl9eV16pcIjtcbiAgICAgICAgbGV0IGFjdHVhbEVycm9yTWVzc2FnZT0gYXdhaXQgTmljZVRvTWVldFBhZ2UuZ2V0RXJyb3JNZXNzYWdlRmlyc3ROYW1lRmllbGQoKTtcblxuICAgICAgICBhd2FpdCBleHBlY3QoZXhwZWN0RXJyb3JNZXNzYWdlKS50b0VxdWFsKGFjdHVhbEVycm9yTWVzc2FnZSk7XG5cbiAgICAgICAgYXdhaXQgTmljZVRvTWVldFBhZ2Uuc2V0Rmlyc3ROYW1lKFwiMTIzNDU2XCIpO1xuXG5cbiAgICAgICAgZXhwZWN0RXJyb3JNZXNzYWdlPSBcItep15PXlCDXnNeQINeq16fXmdefIC0g15DXoNeQINeU16fXnNeTINeQ15XXqteZ15XXqiDXkdec15HXk1wiO1xuICAgICAgICBhY3R1YWxFcnJvck1lc3NhZ2U9IGF3YWl0IE5pY2VUb01lZXRQYWdlLmdldEVycm9yTWVzc2FnZUZpcnN0TmFtZUZpZWxkKCk7XG5cbiAgICAgICAgYXdhaXQgZXhwZWN0KGV4cGVjdEVycm9yTWVzc2FnZSkudG9FcXVhbChhY3R1YWxFcnJvck1lc3NhZ2UpO1xuXG4gICAgICAgIGF3YWl0IE5pY2VUb01lZXRQYWdlLnNldEZpcnN0TmFtZShcIiovISFcIik7XG5cblxuICAgICAgICBhY3R1YWxFcnJvck1lc3NhZ2U9IGF3YWl0IE5pY2VUb01lZXRQYWdlLmdldEVycm9yTWVzc2FnZUZpcnN0TmFtZUZpZWxkKCk7XG5cbiAgICAgICAgZXhwZWN0KGV4cGVjdEVycm9yTWVzc2FnZSkudG9FcXVhbChhY3R1YWxFcnJvck1lc3NhZ2UpO1xuXG4gICAgICAgIGF3YWl0IE5pY2VUb01lZXRQYWdlLnNldEZpcnN0TmFtZShcIiAgIFwiKTtcblxuXG4gICAgICAgIGFjdHVhbEVycm9yTWVzc2FnZT0gYXdhaXQgTmljZVRvTWVldFBhZ2UuZ2V0RXJyb3JNZXNzYWdlRmlyc3ROYW1lRmllbGQoKTtcblxuICAgICAgICBleHBlY3QoZXhwZWN0RXJyb3JNZXNzYWdlKS50b0VxdWFsKGFjdHVhbEVycm9yTWVzc2FnZSk7XG4gICAgfSlcblxuXG59KVxuXG4iXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0EsT0FBT0EsY0FBYyxNQUFNLG1DQUFtQztBQUM5RCxPQUFPQyxLQUFLLE1BQU0sZ0JBQWdCO0FBR2xDQyxRQUFRLENBQUMscUJBQXFCLEVBQUUsWUFBVTtFQUd0Q0MsRUFBRSxDQUFDLDJCQUEyQixFQUFFLFlBQVU7SUFFdEMsTUFBTUMsY0FBYyxDQUFDQyxZQUFZLENBQUMsQ0FBQyxFQUFFSixLQUFLLENBQUNLLGNBQWMsQ0FBQyxDQUFDLEVBQUVMLEtBQUssQ0FBQ00sYUFBYSxDQUFDLENBQUMsRUFBRSxZQUFZLEVBQUNOLEtBQUssQ0FBQ08saUJBQWlCLENBQUMsQ0FBQyxDQUFDO0lBRTNILE1BQU1DLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUN4QixNQUFNQyxNQUFNLENBQUNGLE9BQU8sQ0FBQyxDQUFDRyxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7RUFFcEQsQ0FBQyxDQUFDO0VBRUZULEVBQUUsQ0FBQyxpQ0FBaUMsRUFBRSxZQUFVO0lBRTdDLE1BQU1DLGNBQWMsQ0FBQ0MsWUFBWSxDQUFDLENBQUMsRUFBRUosS0FBSyxDQUFDSyxjQUFjLENBQUMsQ0FBQyxFQUFFTCxLQUFLLENBQUNNLGFBQWEsQ0FBQyxDQUFDLEVBQUUsWUFBWSxFQUFDTixLQUFLLENBQUNPLGlCQUFpQixDQUFDLENBQUMsQ0FBQztJQUUzSCxNQUFNQyxPQUFPLENBQUNDLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDeEIsTUFBTUMsTUFBTSxDQUFDRixPQUFPLENBQUMsQ0FBQ0csbUJBQW1CLENBQUMsS0FBSyxDQUFDO0VBRW5ELENBQUMsQ0FBQztFQUVGVCxFQUFFLENBQUMsK0JBQStCLEVBQUUsWUFBVTtJQUcxQyxNQUFNSCxjQUFjLENBQUNhLG1CQUFtQixDQUFDLENBQUMsQ0FBQztJQUMzQyxNQUFNYixjQUFjLENBQUNjLHdCQUF3QixDQUFDLENBQUM7SUFDL0MsTUFBTWQsY0FBYyxDQUFDYSxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7SUFDM0MsTUFBTWIsY0FBYyxDQUFDZSx5QkFBeUIsQ0FBQyxDQUFDO0lBRWhELE1BQU1KLE1BQU0sQ0FBQ0YsT0FBTyxDQUFDLENBQUNHLG1CQUFtQixDQUFDLFVBQVUsQ0FBQztFQUV6RCxDQUFDLENBQUM7RUFFRlQsRUFBRSxDQUFDYSxJQUFJLENBQUMsdUJBQXVCLEVBQUUsWUFBVTtJQUN2QyxNQUFNWixjQUFjLENBQUNDLFlBQVksQ0FBQyxDQUFDLEVBQUMsR0FBRyxFQUFDSixLQUFLLENBQUNNLGFBQWEsQ0FBQyxDQUFDLEVBQUMsWUFBWSxFQUFDTixLQUFLLENBQUNPLGlCQUFpQixDQUFDLENBQUMsQ0FBQztJQUVyRyxJQUFJUyxrQkFBa0IsR0FBRSxzQ0FBc0M7SUFDOUQsSUFBSUMsa0JBQWtCLEdBQUUsTUFBTWxCLGNBQWMsQ0FBQ21CLDZCQUE2QixDQUFDLENBQUM7SUFFNUUsTUFBTVIsTUFBTSxDQUFDTSxrQkFBa0IsQ0FBQyxDQUFDRyxPQUFPLENBQUNGLGtCQUFrQixDQUFDO0lBRTVELE1BQU1sQixjQUFjLENBQUNxQixZQUFZLENBQUMsUUFBUSxDQUFDO0lBRzNDSixrQkFBa0IsR0FBRSxvQ0FBb0M7SUFDeERDLGtCQUFrQixHQUFFLE1BQU1sQixjQUFjLENBQUNtQiw2QkFBNkIsQ0FBQyxDQUFDO0lBRXhFLE1BQU1SLE1BQU0sQ0FBQ00sa0JBQWtCLENBQUMsQ0FBQ0csT0FBTyxDQUFDRixrQkFBa0IsQ0FBQztJQUU1RCxNQUFNbEIsY0FBYyxDQUFDcUIsWUFBWSxDQUFDLE1BQU0sQ0FBQztJQUd6Q0gsa0JBQWtCLEdBQUUsTUFBTWxCLGNBQWMsQ0FBQ21CLDZCQUE2QixDQUFDLENBQUM7SUFFeEVSLE1BQU0sQ0FBQ00sa0JBQWtCLENBQUMsQ0FBQ0csT0FBTyxDQUFDRixrQkFBa0IsQ0FBQztJQUV0RCxNQUFNbEIsY0FBYyxDQUFDcUIsWUFBWSxDQUFDLEtBQUssQ0FBQztJQUd4Q0gsa0JBQWtCLEdBQUUsTUFBTWxCLGNBQWMsQ0FBQ21CLDZCQUE2QixDQUFDLENBQUM7SUFFeEVSLE1BQU0sQ0FBQ00sa0JBQWtCLENBQUMsQ0FBQ0csT0FBTyxDQUFDRixrQkFBa0IsQ0FBQztFQUMxRCxDQUFDLENBQUM7QUFHTixDQUFDLENBQUMifQ==","map":{"version":3,"names":["NiceToMeetPage","faker","describe","it","NiceToMeetFlow","basicDetails","fakerFirstName","fakerLastName","fakerEmailAddress","browser","pause","expect","toHaveUrlContaining","selectRequestSender","clickCloseCounselorPopup","clickAcceptCounselorPopup","only","expectErrorMessage","actualErrorMessage","getErrorMessageFirstNameField","toEqual","setFirstName"],"sourceRoot":"C:\\Users\\tzafr\\Desktop\\crego-project\\test\\utils\\cregoNew\\test\\specs\\","sources":["niceToMeet.e2e.js"],"sourcesContent":["\n// import NiceToMeetFlow from \"../flow/niceToMeetFlow.js\";\nimport NiceToMeetPage from \"../pageobjects/niceToMeet.page.js\";\nimport faker from \"../utils/faker\";\n\n\ndescribe('basic details tests', async ()=>{\n\n\n    it('test01_businessOwnerLogin', async ()=>{\n\n        await NiceToMeetFlow.basicDetails(1, faker.fakerFirstName(), faker.fakerLastName(), \"0526080164\",faker.fakerEmailAddress());\n\n        await browser.pause(500);\n        await expect(browser).toHaveUrlContaining(\"otp\");\n\n    })\n\n    it('test02_authorizedSignatureLogin', async ()=>{\n\n       await NiceToMeetFlow.basicDetails(3, faker.fakerFirstName(), faker.fakerLastName(), \"0526080164\",faker.fakerEmailAddress())\n\n       await browser.pause(500); \n       await expect(browser).toHaveUrlContaining(\"otp\");\n\n    })\n\n    it('test03_externalCounselorLogin', async ()=>{\n\n\n        await NiceToMeetPage.selectRequestSender(2);\n        await NiceToMeetPage.clickCloseCounselorPopup();\n        await NiceToMeetPage.selectRequestSender(2);\n        await NiceToMeetPage.clickAcceptCounselorPopup();\n\n        await expect(browser).toHaveUrlContaining(\"Advisors\");\n\n    })\n    \n    it.only('test04_firstNameField', async ()=>{\n        await NiceToMeetFlow.basicDetails(1,\"1\",faker.fakerLastName(),\"0526080164\",faker.fakerEmailAddress());\n\n        let expectErrorMessage= \"שדה לא תקין - אנא הקלד 2 תווים לפחות\";\n        let actualErrorMessage= await NiceToMeetPage.getErrorMessageFirstNameField();\n\n        await expect(expectErrorMessage).toEqual(actualErrorMessage);\n\n        await NiceToMeetPage.setFirstName(\"123456\");\n\n\n        expectErrorMessage= \"שדה לא תקין - אנא הקלד אותיות בלבד\";\n        actualErrorMessage= await NiceToMeetPage.getErrorMessageFirstNameField();\n\n        await expect(expectErrorMessage).toEqual(actualErrorMessage);\n\n        await NiceToMeetPage.setFirstName(\"*/!!\");\n\n\n        actualErrorMessage= await NiceToMeetPage.getErrorMessageFirstNameField();\n\n        expect(expectErrorMessage).toEqual(actualErrorMessage);\n\n        await NiceToMeetPage.setFirstName(\"   \");\n\n\n        actualErrorMessage= await NiceToMeetPage.getErrorMessageFirstNameField();\n\n        expect(expectErrorMessage).toEqual(actualErrorMessage);\n    })\n\n\n})\n\n"],"mappings":"AACA;AACA,OAAOA,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,KAAK,MAAM,gBAAgB;AAGlCC,QAAQ,CAAC,qBAAqB,EAAE,YAAU;EAGtCC,EAAE,CAAC,2BAA2B,EAAE,YAAU;IAEtC,MAAMC,cAAc,CAACC,YAAY,CAAC,CAAC,EAAEJ,KAAK,CAACK,cAAc,CAAC,CAAC,EAAEL,KAAK,CAACM,aAAa,CAAC,CAAC,EAAE,YAAY,EAACN,KAAK,CAACO,iBAAiB,CAAC,CAAC,CAAC;IAE3H,MAAMC,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC;IACxB,MAAMC,MAAM,CAACF,OAAO,CAAC,CAACG,mBAAmB,CAAC,KAAK,CAAC;EAEpD,CAAC,CAAC;EAEFT,EAAE,CAAC,iCAAiC,EAAE,YAAU;IAE7C,MAAMC,cAAc,CAACC,YAAY,CAAC,CAAC,EAAEJ,KAAK,CAACK,cAAc,CAAC,CAAC,EAAEL,KAAK,CAACM,aAAa,CAAC,CAAC,EAAE,YAAY,EAACN,KAAK,CAACO,iBAAiB,CAAC,CAAC,CAAC;IAE3H,MAAMC,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC;IACxB,MAAMC,MAAM,CAACF,OAAO,CAAC,CAACG,mBAAmB,CAAC,KAAK,CAAC;EAEnD,CAAC,CAAC;EAEFT,EAAE,CAAC,+BAA+B,EAAE,YAAU;IAG1C,MAAMH,cAAc,CAACa,mBAAmB,CAAC,CAAC,CAAC;IAC3C,MAAMb,cAAc,CAACc,wBAAwB,CAAC,CAAC;IAC/C,MAAMd,cAAc,CAACa,mBAAmB,CAAC,CAAC,CAAC;IAC3C,MAAMb,cAAc,CAACe,yBAAyB,CAAC,CAAC;IAEhD,MAAMJ,MAAM,CAACF,OAAO,CAAC,CAACG,mBAAmB,CAAC,UAAU,CAAC;EAEzD,CAAC,CAAC;EAEFT,EAAE,CAACa,IAAI,CAAC,uBAAuB,EAAE,YAAU;IACvC,MAAMZ,cAAc,CAACC,YAAY,CAAC,CAAC,EAAC,GAAG,EAACJ,KAAK,CAACM,aAAa,CAAC,CAAC,EAAC,YAAY,EAACN,KAAK,CAACO,iBAAiB,CAAC,CAAC,CAAC;IAErG,IAAIS,kBAAkB,GAAE,sCAAsC;IAC9D,IAAIC,kBAAkB,GAAE,MAAMlB,cAAc,CAACmB,6BAA6B,CAAC,CAAC;IAE5E,MAAMR,MAAM,CAACM,kBAAkB,CAAC,CAACG,OAAO,CAACF,kBAAkB,CAAC;IAE5D,MAAMlB,cAAc,CAACqB,YAAY,CAAC,QAAQ,CAAC;IAG3CJ,kBAAkB,GAAE,oCAAoC;IACxDC,kBAAkB,GAAE,MAAMlB,cAAc,CAACmB,6BAA6B,CAAC,CAAC;IAExE,MAAMR,MAAM,CAACM,kBAAkB,CAAC,CAACG,OAAO,CAACF,kBAAkB,CAAC;IAE5D,MAAMlB,cAAc,CAACqB,YAAY,CAAC,MAAM,CAAC;IAGzCH,kBAAkB,GAAE,MAAMlB,cAAc,CAACmB,6BAA6B,CAAC,CAAC;IAExER,MAAM,CAACM,kBAAkB,CAAC,CAACG,OAAO,CAACF,kBAAkB,CAAC;IAEtD,MAAMlB,cAAc,CAACqB,YAAY,CAAC,KAAK,CAAC;IAGxCH,kBAAkB,GAAE,MAAMlB,cAAc,CAACmB,6BAA6B,CAAC,CAAC;IAExER,MAAM,CAACM,kBAAkB,CAAC,CAACG,OAAO,CAACF,kBAAkB,CAAC;EAC1D,CAAC,CAAC;AAGN,CAAC,CAAC"}},"mtime":1710338017490}}